# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

# I was using the anchore inline scan at first, then found it will be deprecated,
# and one replacement was grype.
# Found its CI config for scanning images on:
# https://about.gitlab.com/blog/2021/07/28/secure-container-images-with-gitlab-and-grype/
# Scanning the image this way, one can see the report on Sec & Compliance -> Vuln Report
include:
  - template: Security/Container-Scanning.gitlab-ci.yml
  # The following are not necessary scans for this excercise,
  # but I entertained myself a bit when I found Gitlab's security related other CI templates
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

container_scanning:
  variables:
    CS_ANALYZER_IMAGE: registry.gitlab.com/security-products/container-scanning/grype:4
    # DOCKER_IMAGE: registry.gitlab.com/interview33/giant-squid:latest
    GIT_STRATEGY: fetch # Added this as required for Gitlab auto-remediation
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE${tag}
